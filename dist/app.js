"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const dotenv_1 = __importDefault(require("dotenv"));
const cookie_parser_1 = __importDefault(require("cookie-parser"));
const authController_1 = require("./controllers/authController");
const authMiddleware_1 = require("./middleware/authMiddleware");
const userController_1 = require("./controllers/userController");
const teamController_1 = require("./controllers/teamController");
const TaskController_1 = require("./controllers/TaskController");
const inventoryController_1 = require("./controllers/inventoryController");
// import { create } from 'domain';
dotenv_1.default.config();
const port = '3000';
const app = (0, express_1.default)();
app.use((0, cookie_parser_1.default)());
app.use(express_1.default.json());
app.use(express_1.default.urlencoded({ extended: true }));
app.post('/auth/register', authController_1.register);
app.post('/auth/login', authController_1.login);
app.get('/auth/github', authController_1.github);
app.get('/github', authController_1.githubCallback);
app.post('/forgot-password', authController_1.forgotPassword);
app.post('/users/role', authMiddleware_1.verifyToken, userController_1.updateRole);
app.get('/teams', authMiddleware_1.verifyToken, teamController_1.getTeams);
app.post('/teams', authMiddleware_1.verifyToken, teamController_1.createTeam);
app.post('/teams/:teamId/users', authMiddleware_1.verifyToken, teamController_1.addUserToTeam);
app.post('/tasks', authMiddleware_1.verifyToken, TaskController_1.createTask);
app.get('/teams/:teamId/tasks', TaskController_1.getTasks);
app.put('/tasks/:taskId', TaskController_1.updateTask);
app.delete('/tasks/:taskId', authMiddleware_1.verifyToken, TaskController_1.deleteTask);
app.post('/tasks', authMiddleware_1.verifyToken, TaskController_1.createTask);
app.get('/teams/:teamId/tasks', TaskController_1.getTasks);
app.put('/tasks/:taskId', TaskController_1.updateTask);
app.delete('/tasks/:taskId', authMiddleware_1.verifyToken, TaskController_1.deleteTask);
app.get('/inventory', inventoryController_1.getInventory);
app.post('/inventory', authMiddleware_1.verifyToken, inventoryController_1.addInventory);
app.put('/inventory/:itemId', inventoryController_1.updateInventory);
app.delete('/inventory/:itemId', authMiddleware_1.verifyToken, inventoryController_1.deleteInventory);
app.listen(port, () => {
    console.log('server running on ' + port + '...');
});
